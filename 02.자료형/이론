02. 자료형 (Type)
- 정수형, 실수형, 논리형, 문자형, 문자열형
- 보통 Int, Float, Boolean, Char, String으로 선언하면 편함

1. 정수형
    Byte, Short, Int, Long
    - 음수, 양수 모두 표현
        - Byte (-128 ~ +127) - 2의 8제곱
        - Short (-32768 ~ +32767)
        - Int
            - 가장 많이 사용하는 정수 자료형
        - Long

        -> Byte 에서 Long으로 갈수록 표현할수 있는 숫자의 범위가 넓다


        Byte 자료형 -> 1바이트 -> 8비트
        비트 : 0과1 -> 두개를 표현 할수 있다
        비트1, 비트2
         2  X  2 = 4
        비트1, 비트2, 비트3
         2  X  2   X  2 =8
        -> 2,4,8,16,32,64,128,256

    - 양수만 표현
        - UByte (0 ~ 255)
        - Ushort (0 ~ 65535)
        - UInt
        - ULong

2. 실수형
    - Float -> 4바이트
    - Double -> 8바이트
    // https://learn.microsoft.com/ko-kr/cpp/c-language/type-float?view=msvc-170

3. 논리형(참, 거짓)
    - Boolean
    - 참과, 거짓, True, False 를 표현할 수 있다

4. 문자형
    - 한글자
        - ex) 'A', '가'  -> 작은따옴표

5. 문자열형
    - 여러 글자
        - ex) "안녕하세요", "hello", "A"  -> 큰따옴표

* 자료형 추론 - 자료형을 꼭 적어줘야 하는 언어들이 있음 (Java?) - Kotlin은 추론가능 but 자료형 적자!!
var changeYes : Byte = 100
-> var/val 변수명 : 자료형 = 값
var changeYes = 100
-> 정수의 경우 코틀린은 기본적으로 Int로 추론한다.
-> 실수의 경우 코틀린은 기본적으로 Double로 추론한다.

* 추론힌트를 주는 방법 -> 잘 사용하지 않는다
var number1 = 100 -> Int
var number2 = 100L -> Long
var number3 = 0x100 -> 16진수 표기가 사용된 Int형으로 추론
var number4 = 200u -> UByte

var number2 : Long = 100

* !!!!!!  자료형 추론을 사용하지 말고, 변수를 선언할때 자료형을 적어 주는 것이 좋다  !!!!!!

팁
- 큰 숫자를 할당 할때 _ 로 자리수 구분을 할 수 있다
val BIG_NUMBER : Int = 1_786_324_786_237_612










